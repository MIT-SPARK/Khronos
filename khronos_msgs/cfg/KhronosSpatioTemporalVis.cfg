#!/usr/bin/env python
"""Configuration options for the khronos spatio-temporal visualizer."""
PACKAGE = "khronos_msgs"

import dynamic_reconfigure.parameter_generator_catkin as dr_gen  # NOQA
from dynamic_reconfigure.parameter_generator_catkin import *

gen = dr_gen.ParameterGenerator()

bg_color_mode_enum = gen.enum([gen.const("Color", int_t, 0, "Color the mesh according to the observed color."),
                       gen.const("FirstSeen", int_t, 1, "Color the mesh by first seen timestamp (black=oldest to yellow=newest, green=zero)."),
                       gen.const("LastSeen", int_t, 2, "Color the mesh by last seen timestamp (black=oldest to yellow=newest, green=zero).")],
                     "Set the background mesh color.")

gen.add("background_color", int_t, 0, "How to color the background mesh in the DSG.", 0, 0, 2, edit_method=bg_color_mode_enum)

obj_bbox_color_enum = gen.enum([gen.const("Semantic", int_t, 0, "Color all object bounding boxes by their semantic class."),
                       gen.const("Instance", int_t, 1, "Color all object bounding boxes by their instance id."),
                       gen.const("Presence", int_t, 2, "Color all object bounding boxes their presence state (blue=persistent, green=appeared, red=disappeared, gray=not yet present).")],
                     "Set the object bounding box color.")

gen.add("object_bbox_color", int_t, 0, "How to color the object bounding boxes.", 0, 0, 2, edit_method=obj_bbox_color_enum)

dyn_obj_color_enum = gen.enum([gen.const("ID", int_t, 1, "Color all dynamic objects by their instance id."),
                       gen.const("Red", int_t, 0, "Color all dynamic objects in red."),
                       gen.const("Mixed", int_t, 2, "Color all dynamic objects by their instance id but show dynamic points in red.")],
                      "Set the dynamic object color.")

gen.add("dynamic_object_color", int_t, 0, "How to color the dynamic objects.", 0, 0, 2, edit_method=dyn_obj_color_enum)

gen.add("play_rate", double_t, 1.0, "Playback rate for the DSG.", 1.0, 0.1, 10.0)

gen.add("fade_duration", double_t, 0.0, "Duration [s] for objects to fade in/out. Set to 0 to disable.", 0.0, 0.0, 100.0)


exit(gen.generate(PACKAGE, PACKAGE, "KhronosSpatioTemporalVis"))
