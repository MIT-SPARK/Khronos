#!/usr/bin/env python
"""Configuration options for the khronos mesh visualizer plugin."""
PACKAGE = "khronos_msgs"

import dynamic_reconfigure.parameter_generator_catkin as dr_gen  # NOQA
from dynamic_reconfigure.parameter_generator_catkin import *

gen = dr_gen.ParameterGenerator()

color_mode_enum = gen.enum([gen.const("Color", int_t, 0, "Color all meshes according to their measured color."),
                       gen.const("FirstSeen", int_t, 1, "Color all meshes by first seen timestamp (black=oldest to yellow=newest, green=zero)."),
                       gen.const("LastSeen", int_t, 2, "Color all meshes by last seen timestamp (black=oldest to yellow=newest, green=zero)."),
                       gen.const("SeenDuration", int_t, 3, "Color all meshes by first to last seen duration (black=shortest to yellow=longest, green=zero)."),
                       gen.const("Changes", int_t, 4, "Color all meshes by change state (gray=unobserved, blue=persistent, red=absent).")],
                     "Set the color mode for the visualizer.")

gen.add("color_mode", int_t, 0, "How to color the meshes in the DSG.", 0, 0, 4, edit_method=color_mode_enum)


gen.add("object_changes_at_time", double_t, 0, "Time where to visualize the object change states as % of the maximum robot time.",    100, 0,   100)
gen.add("recolor_background",   bool_t,   0, "If true recolor the background mesh, if false ignore it.",  True)
gen.add("recolor_objects",   bool_t,   0, "If true recolor the object meshes, if false ignore them.",  True)

exit(gen.generate(PACKAGE, PACKAGE, "KhronosMeshPlugin"))
